version: '3.7'
services:
  app_proxy:
    environment:
      APP_HOST: mateosilguero-paaster_paaster_1
      APP_PORT: 5005
      PROXY_AUTH_ADD: 'true'
    container_name: mateosilguero-paaster_app_proxy_1

  paaster-backend:
    container_name: paaster-backend
    image: wardpearce/paaster-backend:latest
    restart: unless-stopped
    ports:
      - "8888:80"
    environment:
      paaster_max_paste_size: 1049000
      paaster_max_iv_size: 42
      paaster_open_api: |
        {
          "title": "paaster.io", 
          "version": "2.0.0"
        }
      paaster_mongo: |
        {
          "host": "paaster-mongodb", 
          "port": 27017, 
          "collection": "paasterv2"
        }
      paaster_s3: |
        {
          "endpoint_url": "${MINIO_ENDPOINT}",
          "secret_access_key": "${MINIO_SECRET_KEY}",
          "access_key_id": "${MINIO_ACCESS_KEY}",
          "region_name": "us-east-1",
          "bucket": "${MINIO_BUCKET_NAME}",
          "folder": "pastes",
          "download_url": "${MINIO_ENDPOINT}/${MINIO_BUCKET_NAME}"
        }
      paaster_proxy_urls: |
        {
          "frontend": "${PAASTER_FRONTEND_URL}", 
          "backend": "${PAASTER_BACKEND_URL}"
        }
    depends_on:
      - paaster-mongodb
      - paaster-minio

  paaster:
    container_name: paaster
    image: wardpearce/paaster-frontend:latest
    restart: unless-stopped
    environment:
      VITE_NAME: "${PAASTER_FRONTEND_URL}"
      VITE_API_URL: "${PAASTER_BACKEND_URL}"
    ports:
      - "8889:80"

  paaster-mongodb:
    image: mongo:latest
    container_name: paaster-mongodb
    restart: unless-stopped
    environment:
      MONGODB_DATA_DIR: /data/db
      MONDODB_LOG_DIR: /dev/null
    volumes:
      - ./mongo_data:/data/db

  paaster-minio:
    image: minio/minio
    container_name: paaster-minio
    restart: unless-stopped
    volumes:
      - ./minio_data:/data
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    command: minio server /data
    ports:
      - "9000:9000"

  paaster-minio-init:
    image: minio/mc
    container_name: paaster-minio-init
    restart: "no"
    depends_on:
      - paaster-minio
    entrypoint: >
      /bin/sh -c "
      until /usr/bin/mc alias set myminio ${MINIO_ENDPOINT} ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY}; do echo waiting for minio; sleep 1; done;
      if /usr/bin/mc ls myminio/${MINIO_BUCKET_NAME}; then
        echo 'Bucket already exists'
      else
        until /usr/bin/mc mb myminio/${MINIO_BUCKET_NAME}; do echo waiting for minio to be ready; sleep 1; done;
      fi;
      /usr/bin/mc anonymous set download myminio/${MINIO_BUCKET_NAME};
      exit 0"